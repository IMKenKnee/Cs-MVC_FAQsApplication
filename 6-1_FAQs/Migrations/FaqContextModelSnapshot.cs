// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _6_1_FAQs.Data;

#nullable disable

namespace _6_1_FAQs.Migrations
{
    [DbContext(typeof(FaqContext))]
    partial class FaqContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_6_1_FAQs.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "general",
                            Name = "General"
                        },
                        new
                        {
                            Id = "history",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("_6_1_FAQs.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "A CSS framework for responsive design.",
                            CategoryId = "general",
                            Question = "What is Bootstrap?",
                            TopicId = "bootstrap"
                        },
                        new
                        {
                            Id = 2,
                            Answer = "A general-purpose object-oriented language.",
                            CategoryId = "general",
                            Question = "What is C#?",
                            TopicId = "csharp"
                        },
                        new
                        {
                            Id = 3,
                            Answer = "A general-purpose scripting language that executes in a web browser.",
                            CategoryId = "general",
                            Question = "What is JavaScript?",
                            TopicId = "javascript"
                        },
                        new
                        {
                            Id = 4,
                            Answer = "In 2011.",
                            CategoryId = "history",
                            Question = "When was Bootstrap first released?",
                            TopicId = "bootstrap"
                        },
                        new
                        {
                            Id = 5,
                            Answer = "In 2002.",
                            CategoryId = "history",
                            Question = "When was C# first released?",
                            TopicId = "csharp"
                        },
                        new
                        {
                            Id = 6,
                            Answer = "In 1995.",
                            CategoryId = "history",
                            Question = "When was JavaScript first released?",
                            TopicId = "javascript"
                        });
                });

            modelBuilder.Entity("_6_1_FAQs.Models.Topic", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = "bootstrap",
                            Name = "Bootstrap"
                        },
                        new
                        {
                            Id = "csharp",
                            Name = "C#"
                        },
                        new
                        {
                            Id = "javascript",
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("_6_1_FAQs.Models.FAQ", b =>
                {
                    b.HasOne("_6_1_FAQs.Models.Category", "Category")
                        .WithMany("FAQs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_6_1_FAQs.Models.Topic", "Topic")
                        .WithMany("FAQs")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("_6_1_FAQs.Models.Category", b =>
                {
                    b.Navigation("FAQs");
                });

            modelBuilder.Entity("_6_1_FAQs.Models.Topic", b =>
                {
                    b.Navigation("FAQs");
                });
#pragma warning restore 612, 618
        }
    }
}
